From 2499d63d766d98ffd46c09fe15074dbc509412ff Mon Sep 17 00:00:00 2001
From: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date: Wed, 5 Feb 2014 15:25:06 -0800
Subject: [PATCH] Prevent exception for invalid sysfs file reads

When sysfs file read fails, for strings, it generates exception,
for iostream. Use raw sysfs read to avoid exception and get
error.
---
 src/thd_cdev_rapl.cpp | 15 ++++++++-------
 src/thd_sys_fs.cpp    | 20 ++++++++++++++++++++
 src/thd_sys_fs.h      |  1 +
 3 files changed, 29 insertions(+), 7 deletions(-)

diff --git a/src/thd_cdev_rapl.cpp b/src/thd_cdev_rapl.cpp
index 85868da..fba60f3 100644
--- a/src/thd_cdev_rapl.cpp
+++ b/src/thd_cdev_rapl.cpp
@@ -107,7 +107,6 @@ int cthd_sysfs_cdev_rapl::update() {
 		return THD_ERROR;
 	}
 
-	std::string power_limit;
 	temp_str.str(std::string());
 	temp_str << "constraint_" << _index << "_max_power_uw";
 	if (!cdev_sysfs.exists(temp_str.str())) {
@@ -115,11 +114,12 @@ int cthd_sysfs_cdev_rapl::update() {
 				temp_str.str().c_str());
 		return THD_ERROR;
 	}
-	cdev_sysfs.read(temp_str.str(), power_limit);
-	std::istringstream(power_limit) >> phy_max;
+	if (cdev_sysfs.read(temp_str.str(), &phy_max) < 0) {
+		thd_log_info("powercap RAPL invalid max power limit range \n");
+		return THD_ERROR;
+	}
 
 	std::stringstream temp_power_str;
-	std::string current_power_limit;
 	temp_power_str.str(std::string());
 	temp_power_str << "constraint_" << _index << "_power_limit_uw";
 	if (!cdev_sysfs.exists(temp_power_str.str())) {
@@ -127,15 +127,16 @@ int cthd_sysfs_cdev_rapl::update() {
 				temp_str.str().c_str());
 		return THD_ERROR;
 	}
-	cdev_sysfs.read(temp_power_str.str(), current_power_limit);
-	std::istringstream(current_power_limit) >> constraint_phy_max;
+	if (cdev_sysfs.read(temp_power_str.str(), &constraint_phy_max) <= 0) {
+		thd_log_info("powercap RAPL invalid max power limit range \n");
+		constraint_phy_max = 0;
+	}
 	if (constraint_phy_max > phy_max) {
 		thd_log_info(
 				"Default constraint power limit is more than max power %lu:%lu\n",
 				constraint_phy_max, phy_max);
 		phy_max = constraint_phy_max;
 	}
-
 	thd_log_info("powercap RAPL max power limit range %lu \n", phy_max);
 
 	set_inc_dec_value(phy_max * (float) rapl_power_dec_percent / 100);
diff --git a/src/thd_sys_fs.cpp b/src/thd_sys_fs.cpp
index 58ca783..fb32dcb 100644
--- a/src/thd_sys_fs.cpp
+++ b/src/thd_sys_fs.cpp
@@ -122,6 +122,26 @@ int csys_fs::read(const std::string &path, unsigned int *ptr_val) {
 	return ret;
 }
 
+int csys_fs::read(const std::string &path, unsigned long *ptr_val) {
+	std::string p = base_path + path;
+	char str[32];
+	int ret;
+
+	int fd = ::open(p.c_str(), O_RDONLY);
+	if (fd < 0) {
+		thd_log_warn("sysfs read failed %s\n", path.c_str());
+		return -errno;
+	}
+	ret = ::read(fd, str, sizeof(str));
+	if (ret > 0)
+		*ptr_val = atol(str);
+	else
+		thd_log_warn("sysfs read failed %s\n", path.c_str());
+	close(fd);
+
+	return ret;
+}
+
 int csys_fs::read(const std::string &path, std::string &buf) {
 	std::string p = base_path + path;
 
diff --git a/src/thd_sys_fs.h b/src/thd_sys_fs.h
index a290539..bbc0874 100644
--- a/src/thd_sys_fs.h
+++ b/src/thd_sys_fs.h
@@ -58,6 +58,7 @@ public:
 	int read(const std::string &path, char *buf, int len);
 	int read(const std::string &path, std::string &buf);
 	int read(const std::string &path, unsigned int *ptr_val);
+	int read(const std::string &path, unsigned long *ptr_val);
 	int read(const std::string &path, unsigned int position, char *buf,
 			int len);
 
-- 
1.9.rc1

