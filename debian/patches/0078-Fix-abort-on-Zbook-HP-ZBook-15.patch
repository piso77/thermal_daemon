From 5063ef25046f0b7a769625cddffe30858e055e02 Mon Sep 17 00:00:00 2001
From: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date: Sat, 25 Jul 2020 20:56:28 -0400
Subject: [PATCH 078/134] Fix abort on Zbook HP ZBook 15

terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted

The problem is that conditions comparison for names failed for
case comparison, so it was passing string to to convert to stoi().
This generates exception.

To avoid this use try and catch and also use ignore case during
comparison.

(cherry picked from commit b808ffd9a7b5b7e43831220d8cd996b7d0313d0c)
Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
(cherry picked from commit 5ccb7c7724598c723c50595c7967278821d0b029)
Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
---
 src/thd_engine_adaptive.cpp | 21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

diff --git a/src/thd_engine_adaptive.cpp b/src/thd_engine_adaptive.cpp
index b5a713b..b017906 100644
--- a/src/thd_engine_adaptive.cpp
+++ b/src/thd_engine_adaptive.cpp
@@ -961,7 +961,7 @@ int cthd_engine_adaptive::evaluate_conditions() {
 
 struct psvt* cthd_engine_adaptive::find_psvt(std::string name) {
 	for (int i = 0; i < (int) psvts.size(); i++) {
-		if (psvts[i].name == name) {
+		if (!strcasecmp(psvts[i].name.c_str(), name.c_str())) {
 			return &psvts[i];
 		}
 	}
@@ -1206,6 +1206,7 @@ void cthd_engine_adaptive::set_int3400_target(struct adaptive_target target) {
 void cthd_engine_adaptive::execute_target(struct adaptive_target target) {
 	cthd_cdev *cdev;
 	std::string name;
+	int argument;
 
 	size_t pos = target.participant.find_last_of(".");
 	if (pos == std::string::npos)
@@ -1219,8 +1220,22 @@ void cthd_engine_adaptive::execute_target(struct adaptive_target target) {
 		}
 		return;
 	}
-	thd_log_info("target:%s %d\n", target.code.c_str(),
-			std::stoi(target.argument, NULL));
+
+	if (target.code == "PSVT") {
+		thd_log_info("PSVT...\n");
+		set_int3400_target(target);
+		return;
+	}
+
+	try {
+		argument = std::stoi(target.argument, NULL);
+	}
+	catch (...) {
+		thd_log_info("Invalid target target:%s %s\n", target.code.c_str(),
+			target.argument.c_str());
+		return;
+	}
+	thd_log_info("target:%s %d\n", target.code.c_str(), argument);
 	cdev->set_adaptive_target(target);
 }
 
-- 
2.27.0

