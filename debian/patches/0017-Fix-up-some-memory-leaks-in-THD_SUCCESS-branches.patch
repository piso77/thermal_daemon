From 30e5450ec47bded0f48f1097515e2ce9f3e05e05 Mon Sep 17 00:00:00 2001
From: Colin Ian King <colin.king@canonical.com>
Date: Mon, 10 Mar 2014 09:31:19 +0000
Subject: [PATCH 17/28] Fix up some memory leaks in !THD_SUCCESS branches

In various THD_SUCCESS failure paths memory is being leaked, so
free them to stop the daemon leaking excessively.

Signed-off-by: Colin Ian King <colin.king@canonical.com>
---
 src/thd_engine.cpp         | 12 +++++++++---
 src/thd_engine_default.cpp | 12 ++++++++++--
 2 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/src/thd_engine.cpp b/src/thd_engine.cpp
index 87e70e0..f00c616 100644
--- a/src/thd_engine.cpp
+++ b/src/thd_engine.cpp
@@ -609,8 +609,10 @@ void cthd_engine::thd_read_default_thermal_sensors() {
 				i = atoi(entry->d_name + strlen("thermal_zone"));
 				cthd_sensor *sensor = new cthd_sensor(i,
 						base_path + entry->d_name + "/", "");
-				if (sensor->sensor_update() != THD_SUCCESS)
+				if (sensor->sensor_update() != THD_SUCCESS) {
+					delete sensor;
 					continue;
+				}
 				sensors.push_back(sensor);
 			}
 		}
@@ -635,8 +637,10 @@ void cthd_engine::thd_read_default_thermal_zones() {
 				i = atoi(entry->d_name + strlen("thermal_zone"));
 				cthd_sysfs_zone *zone = new cthd_sysfs_zone(i,
 						"/sys/class/thermal/thermal_zone");
-				if (zone->zone_update() != THD_SUCCESS)
+				if (zone->zone_update() != THD_SUCCESS) {
+					delete zone;
 					continue;
+				}
 				if (control_mode == EXCLUSIVE)
 					zone->set_zone_active();
 				zones.push_back(zone);
@@ -664,8 +668,10 @@ void cthd_engine::thd_read_default_cooling_devices() {
 				i = atoi(entry->d_name + strlen("cooling_device"));
 				cthd_sysfs_cdev *cdev = new cthd_sysfs_cdev(i,
 						"/sys/class/thermal/");
-				if (cdev->update() != THD_SUCCESS)
+				if (cdev->update() != THD_SUCCESS) {
+					delete cdev;
 					continue;
+				}
 				cdevs.push_back(cdev);
 			}
 		}
diff --git a/src/thd_engine_default.cpp b/src/thd_engine_default.cpp
index 43e23c6..b75d899 100644
--- a/src/thd_engine_default.cpp
+++ b/src/thd_engine_default.cpp
@@ -107,8 +107,10 @@ int cthd_engine_default::read_thermal_sensors() {
 									base_path + entry->d_name + "/"
 											+ temp_input_str.str(),
 									temp_input_str.str(), SENSOR_TYPE_RAW);
-							if (sensor->sensor_update() != THD_SUCCESS)
+							if (sensor->sensor_update() != THD_SUCCESS) {
+								delete sensor;
 								return THD_ERROR;
+							}
 							sensors.push_back(sensor);
 							++index;
 						}
@@ -127,8 +129,10 @@ int cthd_engine_default::read_thermal_sensors() {
 		cthd_sensor *sensor = new cthd_sensor(index,
 				"/sys/class/hwmon/hwmon0/temp1_input", "hwmon",
 				SENSOR_TYPE_RAW);
-		if (sensor->sensor_update() != THD_SUCCESS)
+		if (sensor->sensor_update() != THD_SUCCESS) {
+			delete sensor;
 			return THD_ERROR;
+		}
 		sensors.push_back(sensor);
 		++index;
 
@@ -197,6 +201,8 @@ int cthd_engine_default::read_thermal_zones() {
 						zones.push_back(zone);
 						++count;
 						cpu_zone_created = true;
+					} else {
+						delete zone;
 					}
 				}
 			}
@@ -214,6 +220,8 @@ int cthd_engine_default::read_thermal_zones() {
 				zones.push_back(zone);
 				++count;
 				cpu_zone_created = true;
+			} else {
+				delete zone;
 			}
 
 			if (!cpu_zone_created) {
-- 
1.9.0

