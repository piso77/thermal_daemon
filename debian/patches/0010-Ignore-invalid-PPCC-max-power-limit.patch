From c3461690eafb7304bf59a39fb02955a5154b3861 Mon Sep 17 00:00:00 2001
From: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date: Fri, 24 Apr 2020 11:21:22 -0700
Subject: [PATCH] Ignore invalid PPCC max power limit
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

Some newer platforms moved the PPCC power limits to a new DPTF
configuration file. But they left junk at the
/sys/bus/pci/devices/0000\:00\:04.0/power_limits/power_limit_0_max_uw

In Dell 7390 the default max is 15W, but the value at the above
sysfs entry is 9W, causing performance loss. In this case simply
ignore all the data from the above sysfs entry.

But if dptfxtract is ran before then this sysfs value will be ignored
as we have this limit from DPTF config files. As a safety, added a
warning if that value is also less than the default.
---
 src/thd_cdev_rapl.cpp | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

Index: thermald-1.9.1/src/thd_cdev_rapl.cpp
===================================================================
--- thermald-1.9.1.orig/src/thd_cdev_rapl.cpp
+++ thermald-1.9.1/src/thd_cdev_rapl.cpp
@@ -373,11 +373,20 @@ bool cthd_sysfs_cdev_rapl::read_ppcc_pow
 
 	ppcc = thd_engine->parser.get_ppcc_param();
 	if (ppcc) {
+		int def_max_power;
+
 		thd_log_info("Reading PPCC from the thermal-conf.xml\n");
 		pl0_max_pwr = ppcc->power_limit_max * 1000;
 		pl0_min_pwr = ppcc->power_limit_min * 1000;
 		pl0_min_window = ppcc->time_wind_min * 1000;
 		pl0_step_pwr = ppcc->step_size * 1000;
+
+		thd_log_info("ppcc limits max:%u min:%u  min_win:%u step:%u\n",
+				pl0_max_pwr, pl0_min_pwr, pl0_min_window, pl0_step_pwr);
+		def_max_power = rapl_read_pl1_max();
+		if (def_max_power > pl0_max_pwr)
+			thd_log_warn("ppcc limits is less than def PL1 max power :%d check thermal-conf.xml.auto\n", def_max_power);
+
 		return true;
 	}
 
@@ -413,8 +422,17 @@ bool cthd_sysfs_cdev_rapl::read_ppcc_pow
 	}
 
 	if (pl0_max_pwr && pl0_min_pwr && pl0_min_window && pl0_step_pwr) {
-		thd_log_debug("ppcc limits max:%u min:%u  min_win:%u step:%u\n",
+		int def_max_power;
+
+		thd_log_info("ppcc limits max:%u min:%u  min_win:%u step:%u\n",
 				pl0_max_pwr, pl0_min_pwr, pl0_min_window, pl0_step_pwr);
+
+		def_max_power = rapl_read_pl1_max();
+		if (def_max_power > pl0_max_pwr) {
+			thd_log_info("ppcc limits is less than def PL1 max power :%d, so ignore\n", def_max_power);
+			return false;
+		}
+
 		return true;
 	}
 
