From eafcb495dac16c983641139baf194eba25a42711 Mon Sep 17 00:00:00 2001
From: Colin Ian King <colin.king@canonical.com>
Date: Fri, 13 Feb 2015 12:51:09 +0000
Subject: [PATCH] Fix buffer overrun on readlink() call

buffer overrun discovered by CoverityScan:

CID 105374:  Memory - corruptions  (OVERRUN)
  Overrunning array "buf" of 50 bytes by passing it to a
  function which accesses it at byte offset 50 using argument "50".`

We just need to ensure the buffer has extra space for the end of
string terminator.

Signed-off-by: Colin Ian King <colin.king@canonical.com>
---
 src/thd_zone_therm_sys_fs.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/thd_zone_therm_sys_fs.cpp b/src/thd_zone_therm_sys_fs.cpp
index b8c8dd0..dbfd4ac 100644
--- a/src/thd_zone_therm_sys_fs.cpp
+++ b/src/thd_zone_therm_sys_fs.cpp
@@ -140,7 +140,7 @@ int cthd_sysfs_zone::read_cdev_trip_points() {
 		std::stringstream trip_pt_stream, cdev_stream;
 		std::string trip_pt_str;
 		int trip_cnt = -1;
-		char buf[50], *ptr;
+		char buf[51], *ptr;
 		trip_pt_stream << cdev_sysfs.str() << i << "_trip_point";
 
 		if (zone_sysfs.exists(trip_pt_stream.str())) {
@@ -154,7 +154,7 @@ int cthd_sysfs_zone::read_cdev_trip_points() {
 		if (zone_sysfs.exists(cdev_stream.str())) {
 			thd_log_debug("cdev%d present\n", i);
 			int ret = zone_sysfs.read_symbolic_link_value(cdev_stream.str(),
-					buf, 50);
+					buf, sizeof(buf) - 1);
 			if (ret == 0) {
 				ptr = strstr(buf, "cooling_device");
 				if (ptr) {
-- 
2.1.4

