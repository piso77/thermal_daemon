From ae5716625879cf3e3d6458d27dab50779aabf189 Mon Sep 17 00:00:00 2001
From: Matthew Garrett <mjg59@google.com>
Date: Sun, 12 Apr 2020 02:20:53 -0700
Subject: [PATCH 035/134] Fix offsets in APCT V2 table calculations

Skipping a uint64 requires also skipping the type defintion, so fix up the
offset calculations.

(cherry picked from commit f67c9cbdb536bcb3736bdb391ed50ce325109985)
Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
(cherry picked from commit accd8a195cd3c1bcf9e5194c2470c3d055ccf78e)
Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
---
 src/thd_engine_adaptive.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/thd_engine_adaptive.cpp b/src/thd_engine_adaptive.cpp
index b2f4a03..d51be9d 100644
--- a/src/thd_engine_adaptive.cpp
+++ b/src/thd_engine_adaptive.cpp
@@ -184,18 +184,18 @@ int cthd_engine_adaptive::parse_apct (char *apct, int len) {
 
 				condition.condition = adaptive_condition(get_uint64(apct, &offset));
 				condition.device = get_string(apct, &offset);
-				offset += 8;
+				offset += 12;
 				condition.comparison = adaptive_comparison(get_uint64(apct, &offset));
 				condition.argument = get_uint64(apct, &offset);
 				if (i < int(count - 1)) {
 					condition.operation = adaptive_operation(get_uint64(apct, &offset));
 					if (condition.operation == FOR) {
-						offset += 8;
+						offset += 12;
 						get_string(apct, &offset);
-						offset += 8;
+						offset += 12;
 						condition.time_comparison = adaptive_comparison(get_uint64(apct, &offset));
 						condition.time = get_uint64(apct, &offset);
-						offset += 8;
+						offset += 12;
 						i++;
 					}
 				}
-- 
2.27.0

