From 9da073098f751d3a7f28ec926b507d967c5a7ac7 Mon Sep 17 00:00:00 2001
From: Sridhar Somegowda <sridharx.somegowda@intel.com>
Date: Thu, 22 Dec 2016 15:33:28 +0530
Subject: [PATCH] Fix added to improve modem throttling
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

1) To handle crash at boot-up
2) To remove dependency on ofono
3) To remove hard-coding of sleep value
4) To enusre throttling works fine when
   ofono/RIL logs enabled

Fixed: The formatting of this file as lots of white spaces and
use of spaces for formatting.
---
 src/thd_cdev_modem.cpp | 252 +++++++++++++++++++++++++++++--------------------
 src/thd_cdev_modem.h   |  19 ++--
 2 files changed, 157 insertions(+), 114 deletions(-)

diff --git a/src/thd_cdev_modem.cpp b/src/thd_cdev_modem.cpp
index 5b01634..a56e8e1 100644
--- a/src/thd_cdev_modem.cpp
+++ b/src/thd_cdev_modem.cpp
@@ -28,13 +28,9 @@
 
 #include "thd_cdev_modem.h"
 
-int
-cthd_cdev_modem::parse_ofono_property_changed_signal(DBusMessage* msg,
-							const char* interface,
-							const char* signal,
-							const char* property,
-							dbus_bool_t* new_value)
-{
+int cthd_cdev_modem::parse_ofono_property_changed_signal(DBusMessage* msg,
+		const char* interface, const char* signal, const char* property,
+		dbus_bool_t* new_value) {
 	DBusMessageIter iter;
 	DBusMessageIter var;
 
@@ -43,27 +39,22 @@ cthd_cdev_modem::parse_ofono_property_changed_signal(DBusMessage* msg,
 	dbus_message_iter_init(msg, &iter);
 
 	if (dbus_message_iter_get_arg_type(&iter) != DBUS_TYPE_STRING) {
-		thd_log_error("Invalid arguments in %s[%s]",
-				interface,
-				signal);
+		thd_log_error("Invalid arguments in %s[%s]", interface, signal);
 		return THD_ERROR;
 	}
 
 	dbus_message_iter_get_basic(&iter, &property_name);
 
-	if (strlen(property) != strlen(property_name) ||
-		strcmp(property, property_name)) {
+	if (strlen(property) != strlen(property_name)
+			|| strcmp(property, property_name)) {
 		thd_log_error("Unsupported property : %s", property_name);
 		return THD_ERROR;
 	}
 
 	dbus_message_iter_next(&iter);
 
-	if (dbus_message_iter_get_arg_type(&iter)
-		!= DBUS_TYPE_VARIANT) {
-		thd_log_error("Invalid arguments in %s[%s(%s)]",
-				interface,
-				signal,
+	if (dbus_message_iter_get_arg_type(&iter) != DBUS_TYPE_VARIANT) {
+		thd_log_error("Invalid arguments in %s[%s(%s)]", interface, signal,
 				property);
 		return THD_ERROR;
 	}
@@ -71,9 +62,7 @@ cthd_cdev_modem::parse_ofono_property_changed_signal(DBusMessage* msg,
 	dbus_message_iter_recurse(&iter, &var);
 
 	if (dbus_message_iter_get_arg_type(&var) != DBUS_TYPE_BOOLEAN) {
-		thd_log_error("Invalid arguments in %s[%s(%s)]",
-				interface,
-				signal,
+		thd_log_error("Invalid arguments in %s[%s(%s)]", interface, signal,
 				property);
 		return THD_ERROR;
 	}
@@ -83,51 +72,54 @@ cthd_cdev_modem::parse_ofono_property_changed_signal(DBusMessage* msg,
 	return THD_SUCCESS;
 }
 
-DBusHandlerResult
-cthd_cdev_modem::ofono_signal_handler (DBusConnection *conn,
-					DBusMessage *msg,
-					void *user_data)
-{
+DBusHandlerResult cthd_cdev_modem::ofono_signal_handler(DBusConnection *conn,
+		DBusMessage *msg, void *user_data) {
 	DBusError error;
-	cthd_cdev_modem *cdev_modem = (cthd_cdev_modem *)user_data;
+	cthd_cdev_modem *cdev_modem = (cthd_cdev_modem *) user_data;
 
 	const char *signal = "PropertyChanged";
 
 	dbus_error_init(&error);
 
-	if (dbus_message_is_signal(msg, THERMAL_MANAGEMENT_INTERFACE,
-					signal)) {
+	if (dbus_message_is_signal(msg, THERMAL_MANAGEMENT_INTERFACE, signal)) {
 		dbus_bool_t throttling;
 
-		if (parse_ofono_property_changed_signal
-			(msg, THERMAL_MANAGEMENT_INTERFACE, signal,
-			"TransmitPowerThrottling", &throttling) != THD_SUCCESS)
+		if (parse_ofono_property_changed_signal(msg,
+				THERMAL_MANAGEMENT_INTERFACE, signal, "TransmitPowerThrottling",
+				&throttling) != THD_SUCCESS)
 			return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 
-		if (cdev_modem)
-			cdev_modem->set_throttling_state
-					(throttling ? true : false);
+		if (cdev_modem) {
+			cdev_modem->set_throttling_state(throttling ? true : false);
+
+			cdev_modem->update_online_state(conn);
+			cdev_modem->update_throttling_state(conn);
+			thd_log_debug("TransmitPowerThrottling Initiated");
+		}
 
 		return DBUS_HANDLER_RESULT_HANDLED;
 	} else if (dbus_message_is_signal(msg, MODEM_INTERFACE, signal)) {
 		dbus_bool_t online;
 
-		if (parse_ofono_property_changed_signal(msg, MODEM_INTERFACE,
-							signal, "Online",
-							&online) != THD_SUCCESS)
+		if (parse_ofono_property_changed_signal(msg, MODEM_INTERFACE, signal,
+				"Online", &online) != THD_SUCCESS)
 			return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 
-		if (cdev_modem)
+		if (cdev_modem) {
 			cdev_modem->set_online_state(online ? true : false);
+			cdev_modem->update_online_state(conn);
+			cdev_modem->update_throttling_state(conn);
+			thd_log_debug("Modem online Initiated");
+		}
 
 		return DBUS_HANDLER_RESULT_HANDLED;
-    }
+	}
 
-    return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
+	return DBUS_HANDLER_RESULT_NOT_YET_HANDLED;
 }
 
-cthd_cdev_modem::cthd_cdev_modem(unsigned int _index, std::string control_path)
-		: cthd_cdev(_index, "") {
+cthd_cdev_modem::cthd_cdev_modem(unsigned int _index, std::string control_path) :
+		cthd_cdev(_index, "") {
 	throttling = false;
 	online = false;
 
@@ -138,8 +130,7 @@ cthd_cdev_modem::cthd_cdev_modem(unsigned int _index, std::string control_path)
 }
 
 int cthd_cdev_modem::get_modem_property(DBusConnection* conn,
-					const char* interface,
-					const char* property, bool* value) {
+		const char* interface, const char* property, bool* value) {
 	DBusError error;
 	DBusMessage *msg;
 	DBusMessage *reply;
@@ -149,19 +140,15 @@ int cthd_cdev_modem::get_modem_property(DBusConnection* conn,
 
 	dbus_error_init(&error);
 
-	msg = dbus_message_new_method_call("org.ofono",
-	                                   modem_path.c_str(),
-	                                   interface,
-	                                   "GetProperties");
+	msg = dbus_message_new_method_call("org.ofono", modem_path.c_str(),
+			interface, "GetProperties");
 	if (msg == NULL) {
 		thd_log_error("Error creating D-Bus message for GetProperties "
-				"under %s : %s\n", modem_path.c_str(),
-				error.message);
+				"under %s : %s\n", modem_path.c_str(), error.message);
 		return rc;
 	}
 
-	reply = dbus_connection_send_with_reply_and_block(conn, msg, 10000,
-								&error);
+	reply = dbus_connection_send_with_reply_and_block(conn, msg, 10000, &error);
 	if (dbus_error_is_set(&error)) {
 		thd_log_error("Error invoking GetProperties under %s : %s\n",
 				modem_path.c_str(), error.message);
@@ -190,8 +177,7 @@ int cthd_cdev_modem::get_modem_property(DBusConnection* conn,
 
 		dbus_message_iter_recurse(&dict, &key);
 
-		if (dbus_message_iter_get_arg_type(&key)
-			!= DBUS_TYPE_STRING) {
+		if (dbus_message_iter_get_arg_type(&key) != DBUS_TYPE_STRING) {
 			thd_log_error("GetProperties dict key type not string "
 					"under %s!\n", modem_path.c_str());
 			dbus_message_unref(reply);
@@ -201,30 +187,26 @@ int cthd_cdev_modem::get_modem_property(DBusConnection* conn,
 		dbus_message_iter_get_basic(&key, &property_name);
 
 		/* Check if, this is the property we are interested in */
-		if (strlen(property) != strlen(property_name) ||
-			strcmp(property, property_name)) {
+		if (strlen(property) != strlen(property_name)
+				|| strcmp(property, property_name)) {
 			dbus_message_iter_next(&dict);
 			continue;
 		}
 
 		dbus_message_iter_next(&key);
 
-		if (dbus_message_iter_get_arg_type(&key)
-			!= DBUS_TYPE_VARIANT) {
+		if (dbus_message_iter_get_arg_type(&key) != DBUS_TYPE_VARIANT) {
 			thd_log_error("GetProperties dict value type not "
-					"variant under %s!\n",
-					modem_path.c_str());
+					"variant under %s!\n", modem_path.c_str());
 			dbus_message_unref(reply);
 			return rc;
 		}
 
 		dbus_message_iter_recurse(&key, &var);
 
-		if (dbus_message_iter_get_arg_type(&var)
-			!= DBUS_TYPE_BOOLEAN) {
+		if (dbus_message_iter_get_arg_type(&var) != DBUS_TYPE_BOOLEAN) {
 			thd_log_error("GetProperties dict value(1) type not "
-					"boolean under %s!\n",
-					modem_path.c_str());
+					"boolean under %s!\n", modem_path.c_str());
 			dbus_message_unref(reply);
 			return rc;
 		}
@@ -242,8 +224,8 @@ int cthd_cdev_modem::get_modem_property(DBusConnection* conn,
 int cthd_cdev_modem::update_online_state(DBusConnection* conn) {
 	bool online_state;
 
-	if (get_modem_property(conn, MODEM_INTERFACE, "Online", &online_state)
-				== THD_SUCCESS) {
+	if (get_modem_property(conn, MODEM_INTERFACE, "Online",
+			&online_state) == THD_SUCCESS) {
 		online = online_state;
 		return THD_SUCCESS;
 	}
@@ -255,8 +237,7 @@ int cthd_cdev_modem::update_throttling_state(DBusConnection *conn) {
 	bool enabled;
 
 	if (get_modem_property(conn, THERMAL_MANAGEMENT_INTERFACE,
-				"TransmitPowerThrottling", &enabled)
-				== THD_SUCCESS) {
+			"TransmitPowerThrottling", &enabled) == THD_SUCCESS) {
 		throttling = enabled;
 		return THD_SUCCESS;
 	}
@@ -277,18 +258,13 @@ int cthd_cdev_modem::update() {
 
 	conn = dbus_bus_get(DBUS_BUS_SYSTEM, &error);
 	if (dbus_error_is_set(&error)) {
-		thd_log_error("Error connecting to system bus: %s:\n",
-				error.message);
+		thd_log_error("Error connecting to system bus: %s:\n", error.message);
 		dbus_error_free(&error);
 		return THD_ERROR;
 	}
 
 	dbus_connection_setup_with_g_main(conn, NULL);
 
-	if (update_throttling_state(conn) != THD_SUCCESS ||
-		update_online_state(conn) != THD_SUCCESS)
-		return THD_ERROR;
-
 	/*
 	 * Add a match rule as below ...
 	 *	Type :	Signal
@@ -305,8 +281,7 @@ int cthd_cdev_modem::update() {
 	dbus_bus_add_match(conn, modem_dbus_rule.c_str(), &error);
 	if (dbus_error_is_set(&error)) {
 		thd_log_error("Error adding D-Bus rule \"%s\" : %s",
-				modem_dbus_rule.c_str(),
-				error.message);
+				modem_dbus_rule.c_str(), error.message);
 		dbus_error_free(&error);
 		return THD_ERROR;
 	}
@@ -319,31 +294,33 @@ int cthd_cdev_modem::update() {
 	 *	Property Name : TransmitPowerThrottling
 	 */
 	thermal_management_dbus_rule.append("type='signal'");
-	thermal_management_dbus_rule.append(",path='").append(modem_path)
-							.append("'");
-	thermal_management_dbus_rule.append(",interface='")
-					.append(THERMAL_MANAGEMENT_INTERFACE)
-					.append("'");
+	thermal_management_dbus_rule.append(",path='").append(modem_path).append(
+			"'");
+	thermal_management_dbus_rule.append(",interface='").append(
+			THERMAL_MANAGEMENT_INTERFACE).append("'");
 	thermal_management_dbus_rule.append(",member='PropertyChanged'");
 	thermal_management_dbus_rule.append(",arg0='TransmitPowerThrottling'");
 
 	dbus_bus_add_match(conn, thermal_management_dbus_rule.c_str(), &error);
 	if (dbus_error_is_set(&error)) {
 		thd_log_error("Error adding D-Bus rule \"%s\" : %s",
-				thermal_management_dbus_rule.c_str(),
-				error.message);
+				thermal_management_dbus_rule.c_str(), error.message);
 		dbus_error_free(&error);
 		return THD_ERROR;
 	}
 
 	/* Register a handler for the above added rules */
-	dbus_connection_add_filter(conn, ofono_signal_handler,
-					this, NULL);
+	dbus_connection_add_filter(conn, ofono_signal_handler, this, NULL);
 
 	return THD_SUCCESS;
 }
 
 int cthd_cdev_modem::get_curr_state() {
+
+	if (!online) {
+		update_throttling_state();
+	}
+
 	if (throttling) {
 		curr_state = MODEM_THROTTLING_ENABLED;
 		thd_log_debug("Modem currently under throttling\n");
@@ -355,7 +332,82 @@ int cthd_cdev_modem::get_curr_state() {
 	return curr_state;
 }
 
+void cthd_cdev_modem::update_throttling_state() {
+
+	DBusConnection *conn;
+	DBusError error;
+
+	dbus_error_init(&error);
+	conn = dbus_bus_get(DBUS_BUS_SYSTEM, &error);
+
+	if (dbus_error_is_set(&error)) {
+		thd_log_error("Error :%s", error.message);
+		dbus_error_free(&error);
+		return;
+	}
+
+	dbus_connection_setup_with_g_main(conn, NULL);
+
+	if (is_interface_up(conn) == THD_ERROR) {
+		thd_log_warn("Thermal Interface not ready\n");
+		return;
+	}
+
+	update_online_state(conn);
+	update_throttling_state(conn);
+
+}
+
+int cthd_cdev_modem::is_interface_up(DBusConnection *conn) {
+
+	DBusError error;
+	DBusMessage *msg;
+	DBusMessage *reply;
+	int rc = THD_ERROR;
+
+	dbus_error_init(&error);
+
+	msg = dbus_message_new_method_call("org.ofono", modem_path.c_str(),
+	THERMAL_MANAGEMENT_INTERFACE, "GetProperties");
+
+	if (msg == NULL) {
+		thd_log_error("Error creating D-Bus message for GetProperties "
+				"under %s : %s\n", modem_path.c_str(), error.message);
+		return rc;
+	}
+
+	reply = dbus_connection_send_with_reply_and_block(conn, msg, 10000, &error);
+
+	if (dbus_error_is_set(&error)) {
+		dbus_error_free(&error);
+		dbus_message_unref(msg);
+		return rc;
+	}
+
+	dbus_message_unref(msg);
+	dbus_message_unref(reply);
+
+	return THD_SUCCESS;
+}
+
 void cthd_cdev_modem::set_curr_state(int state, int arg) {
+
+	DBusConnection *conn;
+	DBusError error;
+
+	dbus_error_init(&error);
+	conn = dbus_bus_get(DBUS_BUS_SYSTEM, &error);
+
+	if (dbus_error_is_set(&error)) {
+		thd_log_error("Erro : %s", error.message);
+		dbus_error_free(&error);
+		return;
+	}
+
+	dbus_connection_setup_with_g_main(conn, NULL);
+
+	update_online_state(conn);
+
 	switch (state) {
 	case MODEM_THROTTLING_ENABLED:
 		if (!online)
@@ -367,6 +419,7 @@ void cthd_cdev_modem::set_curr_state(int state, int arg) {
 		else {
 			thd_log_debug("Initiating modem throttling\n");
 			throttle_modem(state);
+			update_throttling_state(conn);
 		}
 		break;
 
@@ -380,6 +433,7 @@ void cthd_cdev_modem::set_curr_state(int state, int arg) {
 		else {
 			thd_log_debug("Initiating modem de-throttling\n");
 			throttle_modem(state);
+			update_throttling_state(conn);
 		}
 		break;
 	}
@@ -413,30 +467,26 @@ void cthd_cdev_modem::throttle_modem(int state) {
 	DBusMessageIter iter;
 	DBusMessageIter var;
 
-	const char *property =  "TransmitPowerThrottling";
+	const char *property = "TransmitPowerThrottling";
 
 	dbus_bool_t enable;
 
-	char var_sig[] = {DBUS_TYPE_BOOLEAN, 0};
+	char var_sig[] = { DBUS_TYPE_BOOLEAN, 0 };
 
 	dbus_error_init(&error);
 
 	conn = dbus_bus_get(DBUS_BUS_SYSTEM, &error);
 	if (dbus_error_is_set(&error)) {
-		thd_log_error("Couldn't connect to system bus: %s:\n",
-				error.message);
+		thd_log_error("Couldn't connect to system bus: %s:\n", error.message);
 		dbus_error_free(&error);
 		return;
 	}
 
-	msg = dbus_message_new_method_call("org.ofono",
-	                                   modem_path.c_str(),
-	                                   THERMAL_MANAGEMENT_INTERFACE,
-	                                   "SetProperty");
+	msg = dbus_message_new_method_call("org.ofono", modem_path.c_str(),
+	THERMAL_MANAGEMENT_INTERFACE, "SetProperty");
 	if (msg == NULL) {
 		thd_log_error("Couldn't create D-Bus message for SetProperty "
-				"under %s : %s\n", modem_path.c_str(),
-				error.message);
+				"under %s : %s\n", modem_path.c_str(), error.message);
 		return;
 	}
 
@@ -444,21 +494,17 @@ void cthd_cdev_modem::throttle_modem(int state) {
 
 	dbus_message_iter_init_append(msg, &iter);
 
-	if (!dbus_message_iter_append_basic(&iter, DBUS_TYPE_STRING,
-						&property)) {
+	if (!dbus_message_iter_append_basic(&iter, DBUS_TYPE_STRING, &property)) {
 		thd_log_error("Error populating modem %s arguments: %s\n",
-				enable ? "throttle" : "de-throttle",
-				error.message);
+				enable ? "throttle" : "de-throttle", error.message);
 		return;
 	}
 
-	dbus_message_iter_open_container(&iter, DBUS_TYPE_VARIANT, var_sig,
-					&var);
+	dbus_message_iter_open_container(&iter, DBUS_TYPE_VARIANT, var_sig, &var);
 
 	if (!dbus_message_iter_append_basic(&var, DBUS_TYPE_BOOLEAN, &enable)) {
 		thd_log_error("Error populating modem %s arguments: %s\n",
-				enable ? "throttle" : "de-throttle",
-				error.message);
+				enable ? "throttle" : "de-throttle", error.message);
 		return;
 	}
 
diff --git a/src/thd_cdev_modem.h b/src/thd_cdev_modem.h
index 317f804..5d9fba2 100644
--- a/src/thd_cdev_modem.h
+++ b/src/thd_cdev_modem.h
@@ -25,8 +25,7 @@
 #define THERMAL_MANAGEMENT_INTERFACE "org.ofono.sofia3gr.ThermalManagement"
 
 enum modem_throttling_state {
-	MODEM_THROTTLING_DISABLED = 0,
-	MODEM_THROTTLING_ENABLED,
+	MODEM_THROTTLING_DISABLED = 0, MODEM_THROTTLING_ENABLED,
 };
 
 class cthd_cdev_modem: public cthd_cdev {
@@ -47,21 +46,19 @@ public:
 	void set_curr_state(int state, int arg);
 	int get_max_state(void);
 	int get_modem_property(DBusConnection *conn, const char *interface,
-				const char *property, bool *value);
+			const char *property, bool *value);
 	int update_online_state(DBusConnection *conn);
 	int update_throttling_state(DBusConnection *conn);
 	int update(void);
+	void update_throttling_state(void);
+	int is_interface_up(DBusConnection *conn);
 
 	static DBusHandlerResult
-	ofono_signal_handler(DBusConnection *conn,
-				DBusMessage *msg,
-				void *user_data);
+	ofono_signal_handler(DBusConnection *conn, DBusMessage *msg,
+			void *user_data);
 
 	static int
-	parse_ofono_property_changed_signal(DBusMessage *msg,
-						const char *interface,
-						const char *signal,
-						const char *property,
-						dbus_bool_t *value);
+	parse_ofono_property_changed_signal(DBusMessage *msg, const char *interface,
+			const char *signal, const char *property, dbus_bool_t *value);
 };
 #endif /* THD_CDEV_MODEM_H_ */
-- 
2.10.2

