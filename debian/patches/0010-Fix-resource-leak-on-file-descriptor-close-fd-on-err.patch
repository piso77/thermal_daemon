From 8adac91619e0b5e77a973f554f12697345b604d4 Mon Sep 17 00:00:00 2001
From: Colin Ian King <colin.king@canonical.com>
Date: Tue, 2 Dec 2014 11:33:18 +0000
Subject: [PATCH 10/10] Fix resource leak on file descriptor, close fd on error
 return paths

read_art and read_trt are not closing fd on several error return paths
causing a resource like on file descriptors, so fix this.

Signed-off-by: Colin Ian King <colin.king@canonical.com>
---
 src/thd_trt_art_reader.cpp | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/thd_trt_art_reader.cpp b/src/thd_trt_art_reader.cpp
index 10b10a5..2bb58b3 100644
--- a/src/thd_trt_art_reader.cpp
+++ b/src/thd_trt_art_reader.cpp
@@ -142,6 +142,7 @@ int cthd_acpi_rel::read_art() {
 	ret = ioctl(fd, ACPI_THERMAL_GET_ART_COUNT, &count);
 	if (ret < 0) {
 		PRINT_ERROR(" failed to GET COUNT on %s\n", rel_cdev.c_str());
+		close(fd);
 		return -1;
 	}
 	PRINT_DEBUG("ART count %lu ...\n", count);
@@ -149,6 +150,7 @@ int cthd_acpi_rel::read_art() {
 	ret = ioctl(fd, ACPI_THERMAL_GET_ART_LEN, &length);
 	if (ret < 0 || !length) {
 		PRINT_ERROR(" failed to GET LEN on %s\n", rel_cdev.c_str());
+		close(fd);
 		return -1;
 	}
 	PRINT_DEBUG("ART length %lu ...\n", length);
@@ -156,11 +158,13 @@ int cthd_acpi_rel::read_art() {
 	art_data = (unsigned char*) new char[length];
 	if (!art_data) {
 		PRINT_ERROR("cannot allocate buffer %lu to read ART\n", length);
+		close(fd);
 		return -1;
 	}
 	ret = ioctl(fd, ACPI_THERMAL_GET_ART, art_data);
 	if (ret < 0) {
 		PRINT_ERROR(" failed to GET ART on %s\n", rel_cdev.c_str());
+		close(fd);
 		return -1;
 	}
 	art_count = count;
@@ -185,6 +189,7 @@ int cthd_acpi_rel::read_trt() {
 	ret = ioctl(fd, ACPI_THERMAL_GET_TRT_COUNT, &count);
 	if (ret < 0) {
 		PRINT_ERROR(" failed to GET COUNT on %s\n", rel_cdev.c_str());
+		close(fd);
 		return -1;
 	}
 	PRINT_DEBUG("TRT count %lu ...\n", count);
@@ -192,17 +197,20 @@ int cthd_acpi_rel::read_trt() {
 	ret = ioctl(fd, ACPI_THERMAL_GET_TRT_LEN, &length);
 	if (ret < 0 || !length) {
 		PRINT_ERROR(" failed to GET LEN on %s\n", rel_cdev.c_str());
+		close(fd);
 		return -1;
 	}
 
 	trt_data = (unsigned char*) new char[length];
 	if (!trt_data) {
 		PRINT_ERROR("cannot allocate buffer %lu to read TRT\n", length);
+		close(fd);
 		return -1;
 	}
 	ret = ioctl(fd, ACPI_THERMAL_GET_TRT, trt_data);
 	if (ret < 0) {
 		PRINT_ERROR(" failed to GET TRT on %s\n", rel_cdev.c_str());
+		close(fd);
 		return -1;
 	}
 	trt_count = count;
-- 
2.1.3

