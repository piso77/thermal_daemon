From 18d1574230c6b9b4e8876c0b6739c074a24205e6 Mon Sep 17 00:00:00 2001
From: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date: Mon, 25 Jan 2016 14:01:20 -0800
Subject: [PATCH 202/203] Move parser init to thd_engine

Move the parser_init and parser_deinit to parent class.
---
 src/thd_engine.cpp         | 26 +++++++++++++++++++++++++-
 src/thd_engine.h           |  4 ++++
 src/thd_engine_default.cpp | 23 -----------------------
 src/thd_engine_default.h   |  5 +----
 4 files changed, 30 insertions(+), 28 deletions(-)

diff --git a/src/thd_engine.cpp b/src/thd_engine.cpp
index b1e1354..9b9b014 100644
--- a/src/thd_engine.cpp
+++ b/src/thd_engine.cpp
@@ -52,7 +52,7 @@ cthd_engine::cthd_engine() :
 				0), preference(0), status(true), thz_last_uevent_time(0), thz_last_temp_ind_time(
 				0), terminate(false), genuine_intel(0), has_invariant_tsc(0), has_aperf(
 				0), proc_list_matched(false), poll_interval_sec(0), poll_sensor_mask(
-				0), poll_fd_cnt(0), rt_kernel(false) {
+				0), poll_fd_cnt(0), rt_kernel(false), parser_init_done(false) {
 	thd_engine = pthread_t();
 	thd_attr = pthread_attr_t();
 
@@ -65,6 +65,9 @@ cthd_engine::cthd_engine() :
 cthd_engine::~cthd_engine() {
 	unsigned int i;
 
+	if (parser_init_done)
+		parser.parser_deinit();
+
 	for (i = 0; i < sensors.size(); ++i) {
 		delete sensors[i];
 	}
@@ -1078,3 +1081,24 @@ int cthd_engine::user_add_cdev(std::string cdev_name, std::string cdev_path,
 
 	return THD_SUCCESS;
 }
+
+int cthd_engine::parser_init() {
+	if (parser_init_done)
+		return THD_SUCCESS;
+	if (parser.parser_init(get_config_file()) == THD_SUCCESS) {
+		if (parser.start_parse() == THD_SUCCESS) {
+			parser.dump_thermal_conf();
+			parser_init_done = true;
+			return THD_SUCCESS;
+		}
+	}
+
+	return THD_ERROR;
+}
+
+void cthd_engine::parser_deinit() {
+	if (parser_init_done) {
+		parser.parser_deinit();
+		parser_init_done = false;
+	}
+}
diff --git a/src/thd_engine.h b/src/thd_engine.h
index 2f23466..be4adcd 100644
--- a/src/thd_engine.h
+++ b/src/thd_engine.h
@@ -114,6 +114,7 @@ private:
 	int poll_fd_cnt;
 	bool rt_kernel;
 	cthd_kobj_uevent kobj_uevent;
+	bool parser_init_done;
 
 	int proc_message(message_capsul_t *msg);
 	void process_pref_change();
@@ -261,6 +262,9 @@ public:
 	int user_add_cdev(std::string cdev_name, std::string cdev_path,
 			int min_state, int max_state, int step);
 	cthd_cdev *user_get_cdev(unsigned int index);
+
+	int parser_init();
+	void parser_deinit();
 };
 
 #endif /* THD_ENGINE_H_ */
diff --git a/src/thd_engine_default.cpp b/src/thd_engine_default.cpp
index 8d1efff..b4f39ba 100644
--- a/src/thd_engine_default.cpp
+++ b/src/thd_engine_default.cpp
@@ -62,29 +62,6 @@ static cooling_dev_t cpu_def_cooling_devices[] = { { true, CDEV_DEF_BIT_UNIT_VAL
 				0.0, 0.0 } } };
 
 cthd_engine_default::~cthd_engine_default() {
-	if (parser_init_done)
-		parser.parser_deinit();
-}
-
-int cthd_engine_default::parser_init() {
-	if (parser_init_done)
-		return THD_SUCCESS;
-	if (parser.parser_init(get_config_file()) == THD_SUCCESS) {
-		if (parser.start_parse() == THD_SUCCESS) {
-			parser.dump_thermal_conf();
-			parser_init_done = true;
-			return THD_SUCCESS;
-		}
-	}
-
-	return THD_ERROR;
-}
-
-void cthd_engine_default::parser_deinit() {
-	if (parser_init_done) {
-		parser.parser_deinit();
-		parser_init_done = false;
-	}
 }
 
 int cthd_engine_default::read_thermal_sensors() {
diff --git a/src/thd_engine_default.h b/src/thd_engine_default.h
index 8f0b58a..641bb4c 100644
--- a/src/thd_engine_default.h
+++ b/src/thd_engine_default.h
@@ -30,18 +30,15 @@
 
 class cthd_engine_default: public cthd_engine {
 private:
-	int parser_init();
-	void parser_deinit();
 	int add_replace_cdev(cooling_dev_t *config);
 
-	bool parser_init_done;
 	cthd_cpu_default_binding def_binding;
 
 public:
 	static const int power_clamp_reduction_percent = 5;
 
 	cthd_engine_default() :
-			cthd_engine(), parser_init_done(false) {
+			cthd_engine() {
 	}
 	~cthd_engine_default();
 	int read_thermal_zones();
-- 
2.7.0.rc3

