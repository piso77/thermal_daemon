From b973f46f1c82f6b83ea6ac5e15c3bb37e12fba25 Mon Sep 17 00:00:00 2001
From: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date: Fri, 16 Oct 2020 11:51:10 -0700
Subject: [PATCH 128/134] Allow base path change for INT3400

TigerLake renames INT3400 to INTC1040. So allow reading from
the updated directories for INTC1040.

(cherry picked from commit 950d6b0f07c40aedfe6070dc620061c017712a7d)
Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
(cherry picked from commit 1493acd879e90a2eb71bd69c09e154a79b7a7f7b)
Signed-off-by: Paolo Pisati <paolo.pisati@canonical.com>
---
 src/thd_engine_adaptive.cpp | 18 +++++++++++++-----
 src/thd_engine_adaptive.h   |  4 +++-
 src/thd_int3400.cpp         | 23 ++++++++++++++++++-----
 src/thd_int3400.h           |  1 +
 4 files changed, 35 insertions(+), 11 deletions(-)

diff --git a/src/thd_engine_adaptive.cpp b/src/thd_engine_adaptive.cpp
index b2e427b..f25708f 100644
--- a/src/thd_engine_adaptive.cpp
+++ b/src/thd_engine_adaptive.cpp
@@ -930,7 +930,7 @@ int cthd_engine_adaptive::compare_time(struct condition condition) {
 }
 
 int cthd_engine_adaptive::evaluate_oem_condition(struct condition condition) {
-	csys_fs sysfs("/sys/bus/platform/devices/INT3400:00/");
+	csys_fs sysfs(int3400_base_path.c_str());
 	int oem_condition = -1;
 
 	if (condition.condition >= Oem0 && condition.condition <= Oem5)
@@ -1500,7 +1500,7 @@ void cthd_engine_adaptive::setup_input_devices() {
 
 int cthd_engine_adaptive::thd_engine_start(bool ignore_cpuid_check) {
 	char *buf;
-	csys_fs sysfs("/sys/");
+	csys_fs sysfs("");
 	size_t size;
 
 	check_cpu_id();
@@ -1517,13 +1517,21 @@ int cthd_engine_adaptive::thd_engine_start(bool ignore_cpuid_check) {
 	parser_disabled = true;
 	force_mmio_rapl = true;
 
-	if (sysfs.read("bus/platform/devices/INT3400:00/firmware_node/path",
+	if (sysfs.exists("/sys/bus/platform/devices/INT3400:00")) {
+		int3400_base_path = "/sys/bus/platform/devices/INT3400:00/";
+	} else if (sysfs.exists("/sys/bus/platform/devices/INTC1040:00")) {
+		int3400_base_path = "/sys/bus/platform/devices/INTC1040:00/";
+	} else {
+		return THD_ERROR;
+	}
+
+	if (sysfs.read(int3400_base_path + "firmware_node/path",
 			int3400_path) < 0) {
 		thd_log_debug("Unable to locate INT3400 firmware path\n");
 		return THD_ERROR;
 	}
 
-	size = sysfs.size("bus/platform/devices/INT3400:00/data_vault");
+	size = sysfs.size(int3400_base_path + "data_vault");
 	if (size == 0) {
 		thd_log_debug("Unable to open GDDV data vault\n");
 		return THD_ERROR;
@@ -1535,7 +1543,7 @@ int cthd_engine_adaptive::thd_engine_start(bool ignore_cpuid_check) {
 		return THD_FATAL_ERROR;
 	}
 
-	if (sysfs.read("bus/platform/devices/INT3400:00/data_vault", buf, size)
+	if (sysfs.read(int3400_base_path + "data_vault", buf, size)
 			< int(size)) {
 		thd_log_debug("Unable to read GDDV data vault\n");
 		delete[] buf;
diff --git a/src/thd_engine_adaptive.h b/src/thd_engine_adaptive.h
index e634c1d..8954d3a 100644
--- a/src/thd_engine_adaptive.h
+++ b/src/thd_engine_adaptive.h
@@ -157,6 +157,8 @@ protected:
 	int current_condition_set;
 	int policy_active;
 	int fallback_id;
+	std::string int3400_base_path;
+
 	int get_type(char *object, int *offset);
 	uint64_t get_uint64(char *object, int *offset);
 	char* get_string(char *object, int *offset);
@@ -201,7 +203,7 @@ public:
 	cthd_engine_adaptive() :
 			cthd_engine_default("63BE270F-1C11-48FD-A6F7-3AF253FF3E2D"), upower_client(
 					NULL), tablet_dev(NULL), current_condition_set(0xffff), policy_active(
-					0), fallback_id(-1) {
+					0), fallback_id(-1), int3400_base_path("") {
 	}
 
 	~cthd_engine_adaptive();
diff --git a/src/thd_int3400.cpp b/src/thd_int3400.cpp
index 86b4fda..4fabaee 100644
--- a/src/thd_int3400.cpp
+++ b/src/thd_int3400.cpp
@@ -23,17 +23,28 @@
  */
 
 #include "thd_int3400.h"
+#include "thd_cdev_gen_sysfs.h"
 #include <iostream>
 #include <fstream>
 #include <iostream>
 #include <sstream>
 
-cthd_INT3400::cthd_INT3400(std::string _uuid) : uuid(_uuid) {
+cthd_INT3400::cthd_INT3400(std::string _uuid) : uuid(_uuid), base_path("") {
+	csys_fs cdev_sysfs("");
+
+	if (cdev_sysfs.exists("/sys/bus/acpi/devices/INT3400:00/physical_node/uuids")) {
+		base_path = "/sys/bus/acpi/devices/INT3400:00/physical_node/uuids/";
+	} else if (cdev_sysfs.exists("/sys/bus/acpi/devices/INTC1040:00/physical_node/uuids")) {
+		base_path = "/sys/bus/acpi/devices/INTC1040:00/physical_node/uuids/";
+	}
+	thd_log_info("INT3400 Base path is %s\n", base_path.c_str());
 }
 
 int cthd_INT3400::match_supported_uuid() {
-	std::string filename =
-			"/sys/bus/acpi/devices/INT3400:00/physical_node/uuids/available_uuids";
+	if (base_path == "")
+		return THD_ERROR;
+
+	std::string filename = base_path + "available_uuids";
 
 	std::ifstream ifs(filename.c_str(), std::ifstream::in);
 	if (ifs.good()) {
@@ -50,8 +61,10 @@ int cthd_INT3400::match_supported_uuid() {
 }
 
 void cthd_INT3400::set_default_uuid(void) {
-	std::string filename =
-			"/sys/bus/acpi/devices/INT3400:00/physical_node/uuids/current_uuid";
+	if (base_path == "")
+		return;
+
+	std::string filename = base_path + "current_uuid";
 
 	std::ofstream ofs(filename.c_str(), std::ofstream::out);
 	if (ofs.good()) {
diff --git a/src/thd_int3400.h b/src/thd_int3400.h
index 8d35891..7b07515 100644
--- a/src/thd_int3400.h
+++ b/src/thd_int3400.h
@@ -32,6 +32,7 @@
 class cthd_INT3400 {
 private:
 	std::string uuid;
+	std::string base_path;
 public:
 	cthd_INT3400(std::string _uuid);
 	int match_supported_uuid(void);
-- 
2.27.0

